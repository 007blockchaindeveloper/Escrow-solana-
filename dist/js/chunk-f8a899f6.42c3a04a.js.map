{"version":3,"sources":["webpack:///./src/Bob.vue?3fb9","webpack:///./src/Bob.vue","webpack:///./src/Bob.vue?6d3f","webpack:///./src/util/takeTrade.ts"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","for","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","render","_ctx","_cache","$props","$setup","$data","$options","type","$event","formState","privateKey","id","programId","takerXAccAddress","takerYAccAddress","escrowAccAddress","XTokenExpectedAmount","style","value","onClick","resetUI","onTakeTrade","setup","takeTrade","alert","Error","message","__exports__","connection","privateKeyByteArray","escrowAccountAddressString","takerXTokenAccountAddressString","takerYTokenAccountAddressString","takerExpectedXTokenAmount","programIdString","takerAccount","split","map","s","parseInt","escrowAccountPubkey","takerXTokenAccountPubkey","takerYTokenAccountPubkey","getAccountInfo","encodedEscrowState","data","decodedEscrowLayout","decode","escrowState","isInitialized","initializerAccountPubkey","initializerPubkey","XTokenTempAccountPubkey","initializerTempTokenAccountPubkey","initializerYTokenAccount","initializerReceivingTokenAccountPubkey","expectedAmount","findProgramAddress","Buffer","from","PDA","exchangeInstruction","Uint8Array","of","toArray","keys","pubkey","publicKey","isSigner","isWritable","sendTransaction","add","skipPreflight","preflightCommitment"],"mappings":"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","file":"js/chunk-f8a899f6.42c3a04a.js","sourcesContent":["import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"bg\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", { class: \"title\" }, \"Escrow UI\", -1)\nconst _hoisted_3 = { class: \"mb-1\" }\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"label\", { for: \"2020-12-24-programId-escrow-alice\" }, \"Throwaway private key (as byte array from sollet.io, without the '[]')\", -1)\nconst _hoisted_5 = { class: \"mb-1\" }\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"label\", { for: \"2020-12-24-programId-escrow-alice\" }, \"Program id\", -1)\nconst _hoisted_7 = { class: \"mb-1\" }\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"label\", { for: \"\" }, \"Bob's X token account pubkey\", -1)\nconst _hoisted_9 = { class: \"mb-1\" }\nconst _hoisted_10 = /*#__PURE__*/_createVNode(\"label\", { for: \"\" }, \"Bob's Y token account pubkey\", -1)\nconst _hoisted_11 = { class: \"mb-1\" }\nconst _hoisted_12 = /*#__PURE__*/_createVNode(\"label\", { for: \"\" }, \"Escrow account pubkey\", -1)\nconst _hoisted_13 = { class: \"mb-1\" }\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"label\", { for: \"\" }, \"Amount X tokens Bob wants\", -1)\nconst _hoisted_15 = { class: \"mb-1\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createVNode(\"div\", null, [\n      _createVNode(\"div\", _hoisted_3, [\n        _hoisted_4,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.formState.privateKey = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.privateKey]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_5, [\n        _hoisted_6,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"2020-12-24-programId-escrow-alice\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.formState.programId = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.programId]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_7, [\n        _hoisted_8,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.formState.takerXAccAddress = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.takerXAccAddress]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_9, [\n        _hoisted_10,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.formState.takerYAccAddress = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.takerYAccAddress]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_11, [\n        _hoisted_12,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_ctx.formState.escrowAccAddress = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.escrowAccAddress]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_13, [\n        _hoisted_14,\n        _withDirectives(_createVNode(\"input\", {\n          class: \"display-block\",\n          type: \"number\",\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_ctx.formState.XTokenExpectedAmount = $event))\n        }, null, 512), [\n          [_vModelText, _ctx.formState.XTokenExpectedAmount]\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_15, [\n        _createVNode(\"input\", {\n          style: {\"margin-right\":\"5px\"},\n          class: \"cursor-pointer border-none bg-btn normal-font-size\",\n          type: \"submit\",\n          value: \"Reset UI\",\n          onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.resetUI && _ctx.resetUI(...args)))\n        }),\n        _createVNode(\"input\", {\n          class: \"cursor-pointer border-none bg-btn normal-font-size\",\n          type: \"submit\",\n          value: \"Take trade\",\n          onClick: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.onTakeTrade && _ctx.onTakeTrade(...args)))\n        })\n      ])\n    ])\n  ]))\n}"," \nimport { defineComponent, reactive } from 'vue';\nimport { takeTrade } from \"./util/takeTrade\";\n\nexport default defineComponent({\n    setup() {\n        const formState = reactive({\n            privateKey: \"\",\n            programId: \"\",\n            takerXAccAddress: \"\",\n            takerYAccAddress: \"\",\n            escrowAccAddress: \"\",\n            XTokenExpectedAmount: 0\n        })\n\n        const resetUI = () => {\n          formState.privateKey = \"\";\n          formState.programId = \"\";\n          formState.takerXAccAddress = \"\",\n          formState.takerYAccAddress = \"\",\n          formState.escrowAccAddress = \"\",\n          formState.XTokenExpectedAmount = 0\n        }\n        \n        const onTakeTrade = async () => {\n          try {\n            await takeTrade(\n              formState.privateKey,\n              formState.escrowAccAddress,\n              formState.takerXAccAddress,\n              formState.takerYAccAddress,\n              formState.XTokenExpectedAmount,\n              formState.programId\n              );\n              alert(\"Success! Alice and Bob have traded their tokens and all temporary accounts have been closed\");\n          } catch (err) {\n            if (err instanceof Error) {\n              alert(err.message);\n            } else {\n              alert(\"A message-less error occurred\");\n            }\n          }\n        }\n\n        return { formState, resetUI, onTakeTrade };\n    }\n})\n","import { render } from \"./Bob.vue?vue&type=template&id=75e4a00f&ts=true\"\nimport script from \"./Bob.vue?vue&type=script&lang=ts\"\nexport * from \"./Bob.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/mnt/g/Blockchain/solana/solana-escrow/ui/escrow-ui/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { Account, Connection, PublicKey, Transaction, TransactionInstruction } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\nimport { ESCROW_ACCOUNT_DATA_LAYOUT, EscrowLayout } from \"./layout\"; \n\nconst connection = new Connection(\"http://localhost:8899\", 'singleGossip');\n\nexport const takeTrade = async (\n    privateKeyByteArray: string,\n    escrowAccountAddressString: string,\n    takerXTokenAccountAddressString: string,\n    takerYTokenAccountAddressString: string,\n    takerExpectedXTokenAmount: number,\n    programIdString: string,\n) => {\n    const takerAccount = new Account(privateKeyByteArray.split(',').map(s => parseInt(s)));\n    const escrowAccountPubkey = new PublicKey(escrowAccountAddressString);\n    const takerXTokenAccountPubkey = new PublicKey(takerXTokenAccountAddressString);\n    const takerYTokenAccountPubkey = new PublicKey(takerYTokenAccountAddressString);\n    const programId = new PublicKey(programIdString);\n\n    let encodedEscrowState;\n    try {\n        encodedEscrowState = (await connection.getAccountInfo(escrowAccountPubkey, 'singleGossip'))!.data;\n    } catch (err) {\n        throw new Error(\"Could not find escrow at given address!\")\n    }\n    const decodedEscrowLayout = ESCROW_ACCOUNT_DATA_LAYOUT.decode(encodedEscrowState) as EscrowLayout;\n    const escrowState =  {\n        escrowAccountPubkey: escrowAccountPubkey,\n        isInitialized: !!decodedEscrowLayout.isInitialized,\n        initializerAccountPubkey: new PublicKey(decodedEscrowLayout.initializerPubkey),\n        XTokenTempAccountPubkey: new PublicKey(decodedEscrowLayout.initializerTempTokenAccountPubkey),\n        initializerYTokenAccount: new PublicKey(decodedEscrowLayout.initializerReceivingTokenAccountPubkey),\n        expectedAmount: new BN(decodedEscrowLayout.expectedAmount, 10, \"le\")\n    };\n\n    const PDA = await PublicKey.findProgramAddress([Buffer.from(\"escrow\")], programId);\n\n    const exchangeInstruction = new TransactionInstruction({\n        programId,\n        data: Buffer.from(Uint8Array.of(1, ...new BN(takerExpectedXTokenAmount).toArray(\"le\", 8))),\n        keys: [\n            { pubkey: takerAccount.publicKey, isSigner: true, isWritable: false },\n            { pubkey: takerYTokenAccountPubkey, isSigner: false, isWritable: true },\n            { pubkey: takerXTokenAccountPubkey, isSigner: false, isWritable: true },\n            { pubkey: escrowState.XTokenTempAccountPubkey, isSigner: false, isWritable: true},\n            { pubkey: escrowState.initializerAccountPubkey, isSigner: false, isWritable: true},\n            { pubkey: escrowState.initializerYTokenAccount, isSigner: false, isWritable: true},\n            { pubkey: escrowAccountPubkey, isSigner: false, isWritable: true },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false},\n            { pubkey: PDA[0], isSigner: false, isWritable: false}\n        ] \n    })    \n\n    await connection.sendTransaction(new Transaction().add(exchangeInstruction), [takerAccount], {skipPreflight: false, preflightCommitment: 'singleGossip'});\n}\n"],"sourceRoot":""}